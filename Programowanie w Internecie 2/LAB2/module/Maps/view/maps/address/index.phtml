<?php
$this->headScript()->appendFile(
    'https://maps.googleapis.com/maps/api/js?key=AIzaSyB_s-LXrbjdnWghWb_xHaJ8UsEMYVO0YZw&callback=initMap',
    'text/javascript',
    ['async' => true, 'defer' => true]
);
?>

<script>
    let map;

    function initMap() {

        const geocoder = new google.maps.Geocoder();
        geocoder.geocode({
            'address': 'Piotrkowska 13, Łódź, Polska'
        }, function(results, status) {
            if (status == 'OK') {
                console.log(results);
            } else {
                console.log(status);
            }
        })

        const latlng = new google.maps.LatLng(52.24588095869954, 20.940241813659668);
        const myOptions = {
            zoom: 15,
            center: latlng,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        map = new google.maps.Map(
            document.getElementById("map"),
            myOptions
        );

        const markers = [];
        const items = [];

        <?php foreach ($this->addresses as $addr) : ?>
            items.push({
                coordinates: new google.maps.LatLng(<?= $addr->lat ?>, <?= $addr->lng ?>),
                details: '<?= $addr->desc ?>',
                address: '<?= $addr->addr ?>',
                color: '<?= $addr->color ?>',
            });

        <?php endforeach; ?>

        const latlngbounds = new google.maps.LatLngBounds();
        console.log('hello');

        for (let i = 0; i < items.length; i++) {
            markers[i] = new google.maps.Marker({
                position: items[i].coordinates,
                map: map,
                title: items[i].details,
                animation: google.maps.Animation.DROP,
                icon: {
                    url: "http://maps.google.com/mapfiles/ms/icons/" + items[i].color + "-dot.png"
                }
            });

            addInfo(markers[i],
                "<strong>Okno informacyjne</strong><br/>" +
                items[i].details +
                "<br/>" + items[i].address);

            latlngbounds.extend(items[i].coordinates);
        }

        map.fitBounds(latlngbounds);
    }

    function addInfo(marker, content) {
        const infowindow = new google.maps.InfoWindow({
            content: content
        });

        marker.addListener("click", () => {
            if (marker.getAnimation() !== null) {
                marker.setAnimation(null);
            } else {
                marker.setAnimation(google.maps.Animation.BOUNCE);
            }
            infowindow.open(map, marker);
        });

    }
</script>

<div class="row">
    <div class="col-md-12">
        <h1>Google Maps</h1>
    </div>
    <div class="col-md-12">
        <div id="map" style="width: 800px; height: 600px;"></div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <h1>Google Maps</h1>
    </div>
    <div class="col-lg-4">
        <?= $this->form()->openTag($form) ?>

        <div class="form-group">
            <?= $this->formLabel($form->get('address')) ?>
            <?= $this->formText($form->get('address')) ?>
            <?= $this->formElementErrors($form->get('address'), ['class' => 'help-block']) ?>
        </div>
        <div class="form-group">
            <?= $this->formLabel($form->get('details')) ?>
            <?= $this->formText($form->get('details')) ?>
            <?= $this->formElementErrors($form->get('details'), ['class' => 'help-block']) ?>
        </div>
        <div class="form-group">
            <?= $this->formLabel($form->get('color')) ?>
            <?= $this->formSelect($form->get('color')) ?>
            <?= $this->formElementErrors($form->get('color'), ['class' => 'help-block']) ?>
        </div>
        <?= $this->formSubmit($form->get('save')) ?>

        <?= $this->form()->closeTag($form) ?>
    </div>
</div>